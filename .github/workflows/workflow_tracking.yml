name: Amazon Competitors Tracker

on:
  schedule:
    - cron: "0 12 * * 1"
  workflow_dispatch: {}  # permite ejecuci칩n manual

permissions:
  contents: write

concurrency:
  group: amazon-competitors-tracker
  cancel-in-progress: false

jobs:
  discover-asins:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug list Asins directory
        run: |
          echo "Contenido de Asins/:"
          ls -la Asins || true

      - name: Build matrix from Asins/*.txt
        id: build-matrix
        shell: bash
        run: |
          set -euo pipefail
          # Buscar case-insensitive: asins_*.txt
          mapfile -t files < <(find Asins -maxdepth 1 -type f -iregex '.*/asins_.*\.txt' | sort)

          if [ ${#files[@]} -eq 0 ]; then
            echo "No se encontraron archivos con patr칩n asins_*.txt (case-insensitive) en Asins/"
            echo "matrix=[]" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Archivos detectados:"
          printf ' - %s\n' "${files[@]}"

          # *** FIX: usar jq con argumentos, no por stdin, para incluir TODOS los archivos ***
          json=$(jq -n -c --args "${files[@]}" '[ .[] | {asin_file:.} ]')
          echo "Matriz detectada (compacta): $json"

          # Un solo rengl칩n en GITHUB_OUTPUT
          echo "matrix=$json" >> "$GITHUB_OUTPUT"

  fetch-and-commit:
    needs: discover-asins
    if: ${{ needs.discover-asins.outputs.matrix != '[]' }}  # salta si no hay archivos
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      max-parallel: 1   # ejecutar de a uno
      matrix:
        include: ${{ fromJson(needs.discover-asins.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests pandas python-dotenv
          fi

      - name: Run data request for ${{ matrix.asin_file }}
        env:
          RAPIDAPI_KEY: ${{ secrets.AMAZON_API_KEY }}
          COUNTRY: US
          ASIN_FILE: ${{ matrix.asin_file }}
        shell: bash
        run: |
          set -euo pipefail
          echo "Processing $ASIN_FILE ..."
          python request-api.py
          echo "Sleeping 1s to respect API pacing..."
          sleep 1

      - name: Get UTC timestamp
        id: ts
        shell: bash
        run: echo "utc=$(date -u +'%Y-%m-%d %H:%M:%S')" >> "$GITHUB_OUTPUT"

      - name: Commit y push autom치ticos
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): update competitors CSVs (UTC ${{ steps.ts.outputs.utc }})"
          branch: main
