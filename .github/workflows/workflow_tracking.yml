name: Amazon Competitors Tracker

on:
  schedule:
    - cron: "0 12 * * 1"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: amazon-competitors-tracker
  cancel-in-progress: false

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      max-parallel: 1 # ejecutar de a uno para no romper rate limit
      matrix:
        asin_file: [] # placeholder, se llena dinámicamente más abajo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find ASIN txt files
        id: asin_files
        run: |
          files=$(ls Asins/asins_*.txt)
          echo "files=$files"
          files_json=$(printf '%s\n' $files | jq -R . | jq -s .)
          echo "matrix={\"asin_file\":$files_json}" >> $GITHUB_OUTPUT

      - name: Set dynamic matrix
        uses: actions/github-script@v7
        id: set-matrix
        with:
          script: |
            return JSON.parse(process.env.MATRIX_JSON)
        env:
          MATRIX_JSON: ${{ steps.asin_files.outputs.matrix }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests pandas python-dotenv
          fi

      - name: Run data request for ${{ matrix.asin_file }}
        env:
          RAPIDAPI_KEY: ${{ secrets.AMAZON_API_KEY }}
          COUNTRY: US
          ASIN_FILE: ${{ matrix.asin_file }}
        run: |
          set -euo pipefail
          echo "Processing $ASIN_FILE ..."
          python request-api.py
          echo "Sleeping 10s to respect API rate limit..."
          sleep 10

      - name: Get UTC timestamp
        id: ts
        run: echo "utc=$(date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Commit y push automáticos
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): update competitors CSVs (UTC ${{ steps.ts.outputs.utc }})"
          branch: main
